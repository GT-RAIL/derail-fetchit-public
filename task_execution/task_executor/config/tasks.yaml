tasks:
  ############# MAIN #############
  # A test task for each of the sub tasks
  recognition_test:
    steps:
    - action: segment
      var:
      - segmented_objects

    - action: recognize_object
      params:
        desired_obj: SMALL_GEAR
        segmented_objects: var.segmented_objects
      var:
      - object_idx

  # Test task - this one tries to pick up the object provided as a param
  test:
    params:
    - object_key

    steps:
    - action: torso
      params:
        height: 0.4

    - task: reset_arm
      params:
        poses: joint_poses.ready

    - action: look
      params:
        pose: gripper_poses.object_look_location

    - task: perceive_pick_loop_task
      params:
        object_key: params.object_key

    - action: arm
      params:
        poses: joint_poses.ready

  # Setup for the main tasks. Can get rid of this if need be
  setup:
    steps:
    - action: torso
      params:
        height: 0.4

    - task: reset_arm
      params:
        poses: joint_poses.ready

    - action: update_beliefs
      params:
        beliefs:
          LARGE_GEAR_ON_TABLE: true
          SMALL_GEAR_ON_TABLE: true
          GEARBOX_TOP_ON_TABLE: true
          GEARBOX_BOTTOM_ON_TABLE: true
          ZERO_BOLTS_IN_KIT: true
          KIT_ON_TABLE: false
          KIT_ON_ROBOT: true

  # Reset the arm in preparation for a new run
  reset_arm:
    params:
    - poses

    steps:
    - action: load_static_octomap

    - action: gripper
      params:
        command: open

    - op: make_boolean
      params:
        var_name: poses
        bool_name: poses_exist
      var:
      - poses_exist

    - action: detach_objects
      params:
        detach_arm: true

    - choice: move_to_poses
      params:
        condition: var.poses_exist
        if_true:
          action: arm
          params:
            poses: params.poses
            look_at_gripper: true

  # A primitive to localize the bin on the robot's base
  localize_bin_robot:
    var:
    - bin_poses

    steps:
    - action: look
      params:
        pose: gripper_poses.kit_on_bin

    - action: wait
      params:
        duration: 1.0

    - action: detect_bins
      params:
        abort_on_zero: true
      var:
      - bin_poses

  # A primitive to pick an object from the table
  perceive:
    params:
    - object_key
    - look_location

    var:
    - object_idx
    - grasps

    steps:
    - action: look
      params:
        pose: params.look_location

    - action: wait
      params:
        duration: 1.0

    - action: segment
      params:
        abort_on_zero: true
      var:
      - segmented_objects

    - action: recognize_object
      params:
        desired_obj: params.object_key
        segmented_objects: var.segmented_objects
      var:
      - object_idx

    - op: get_index
      params:
        var_name: segmented_objects
        idx: var.object_idx
        idx_name: segmented_obj
      var:
      - segmented_obj

    - action: find_grasps
      params:
        segmented_obj: var.segmented_obj
      var:
      - grasps

  # Given the grasps and the index of the object, pick it up
  pick_task:
    params:
    - object_idx
    - grasps

    var:
    - grasped

    steps:
    - action: pick
      params:
        object_idx: params.object_idx
        grasps: params.grasps

    - action: verify_grasp
      params:
        abort_on_false: false
      var:
      - grasped

  # The combined perceive and pick task to loop over
  perceive_pick:
    params:
    - object_key
    - look_location

    var:
    - not_grasped

    steps:
    - action: detach_objects
      params:
        detach_arm: true

    - action: arm
      params:
        poses: joint_poses.ready

    - task: perceive
      params:
        object_key: params.object_key
        look_location: params.look_location
      var:
      - object_idx
      - grasps

    - task: pick_task
      params:
        object_idx: var.object_idx
        grasps: var.grasps
      var:
      - grasped

    - op: negate
      params:
        var_name: grasped
        negate_name: not_grasped
      var:
      - not_grasped

  # The loop that tries to pick until it succeeds in the perceive and pick
  perceive_pick_loop_task:
    params:
    - object_key
    - look_location

    steps:
    - op: assign
      params:
        var_name: not_grasped
        value: true
      var:
      - not_grasped

    - loop: perceive_pick_loop
      params:
        condition: var.not_grasped
        loop_body:
          task: perceive_pick
          params:
            object_key: params.object_key
            look_location: params.look_location
          var:
          - not_grasped

  # A task to pick an object and stow it in the kit
  pick_place_in_kit:
    params:
    - object_key
    - look_location

    steps:
    - task: perceive_pick_loop_task
      params:
        object_key: params.object_key
        look_location: params.look_location

    - action: arm
      params:
        poses: joint_poses.ready

    - action: move
      params:
        location: waypoints.origin

    - action: in_hand_localize
      var:
      - object_transform

    - action: store_object
      params:
        object_key: params.object_key

    - action: arm
      params:
        poses: joint_poses.ready

  # Pick and place an object in the kit
  pick_place_object_in_kit:
    # object_key: the object we're picking and placing (str)
    # move_location: a location param understood by `move` for where to move the
    #   base
    # look_location: a location param understood by `look` for where to look
    # belief_update: the beliefs to update when successful (dict)
    params:
    - object_key
    - move_location
    - look_location
    - belief_update

    steps:
    - action: move
      params:
        location: params.move_location

    - task: pick_place_in_kit
      params:
        object_key: params.object_key
        look_location: params.look_location

    - action: update_beliefs
      params:
        beliefs: params.belief_update

  # Build the kit
  build_kit:
    steps:
    - task: setup

    - task: localize_bin_robot
      var:
      - bin_poses

    - task: pick_place_object_in_kit
      params:
        object_key: BOLT
        move_location: locations.schunk_test
        look_location: gripper_poses.object_look_location
        belief_update:
          ZERO_BOLTS_IN_KIT: false
          ONE_BOLT_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: GEARBOX_BOTTOM
        move_location: locations.schunk_test
        look_location: gripper_poses.object_look_location
        belief_update:
          GEARBOX_BOTTOM_ON_TABLE: false
          GEARBOX_BOTTOM_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: GEARBOX_TOP
        move_location: locations.schunk_test
        look_location: gripper_poses.object_look_location
        belief_update:
          GEARBOX_TOP_ON_TABLE: false
          GEARBOX_TOP_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: LARGE_GEAR
        move_location: locations.schunk_test
        look_location: gripper_poses.object_look_location
        belief_update:
          LARGE_GEAR_ON_TABLE: false
          LARGE_GEAR_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: SMALL_GEAR
        move_location: locations.schunk_test
        look_location: gripper_poses.object_look_location
        belief_update:
          SMALL_GEAR_ON_TABLE: false
          SMALL_GEAR_IN_KIT: true

  ############# RECOVERY #############
  # Swivel head up and down
  clearance_look_tilt:
    steps:
    # Look up and down
    - action: look_pan_tilt
      params:
        tilt_amount: -0.76

    - action: wait
      params:
        duration: 0.3

    - action: look_pan_tilt
      params:
        tilt_amount: 1.1

    - action: wait
      params:
        duration: 0.3

    - action: look_pan_tilt
      params:
        tilt_amount: 1.1

    - action: wait
      params:
        duration: 0.3

    - action: look_pan_tilt
      params:
        tilt_amount: -1.44

  # Look straight ahead, and then swivel head from side to side & up to down
  clearance_look_pan_tilt:
    steps:
    - action: look
      params:
        pose: {x: 50, y: 0, z: 1.4, frame: "base_link"}

    - action: look_pan_tilt
      params:
        pan_amount: 0.78

    - action: look_pan_tilt
      params:
        pan_amount: 0.77

    - action: wait
      params:
        duration: 0.3

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: wait
      params:
        duration: 0.3

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: wait
      params:
        duration: 0.3

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: wait
      params:
        duration: 0.3

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: wait
      params:
        duration: 0.3

    - task: clearance_look_tilt

    - action: look
      params:
        pose: {x: 50, y: 0, z: 1.4, frame: "base_link"}

  # Clear out the octomap
  clear_octomap_task:
    steps:
    - task: clearance_look_pan_tilt
