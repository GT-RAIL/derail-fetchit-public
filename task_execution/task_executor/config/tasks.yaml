tasks:
  ############# MAIN #############
  # A test task for recognition. There is no robot movement

  recognition_test:
    params:
    - object_key

    var:
    - object_idx

    steps:
    - action: segment
      var:
      - segmented_objects

    - action: recognize_object
      params:
        desired_obj: params.object_key
        segmented_objects: var.segmented_objects
        checks:
          check_location: false
      var:
      - object_idx

  # A test task for picking up an object. No base movement
  pick_test:
    params:
    - object_key
    - look_location

    steps:
    - action: torso
      params:
        height: 0.4

    - task: reset_arm
      params:
        poses: joint_poses.ready

    - action: look
      params:
        pose: params.look_location

    - task: perceive_pick_loop_task
      params:
        object_key: params.object_key
        look_location: params.look_location
        move_location: false

    - action: arm
      params:
        poses: joint_poses.ready

  # A test task for picking up and storing object. No base movement
  stationary_pick_place_test:
    params:
      - object_key
      - look_location

    steps:
      - action: torso
        params:
          height: 0.4

      - task: reset_arm
        params:
          poses: joint_poses.ready

      - action: look
        params:
          pose: params.look_location

      - task: perceive_pick_loop_task
        params:
          object_key: params.object_key
          look_location: params.look_location
          move_location: false

      - action: in_hand_localize
        params:
          disambiguate_direction: false
        var:
          - object_transform

      - action: store_object
        params:
          object_key: params.object_key

  # A kit pick and place test. This does move the robot
  kit_pick_place_test:
    steps:
    - action: torso
      params:
        height: 0.4

    - action: detach_objects
      params:
        detach_arm: true
        detach_base: true

    - task: reset_arm
      params:
        poses: joint_poses.ready

    - action: move
      params:
        location: waypoints.kits

    - task: pick_kit_loop_task
      params:
        look_location: gripper_poses.object_look_location

    - action: place_kit_base

    - action: move
      params:
        location: locations.origin

    - action: arm
      params:
        poses: joint_poses.ready

    - task: localize_bin_robot
      var:
      - bin_poses

  # Test a waypoint and look direction settting
  waypoint_look_test:
    params:
    - move_location
    - look_location

    steps:
    - task: setup

    - action: move
      params:
        location: params.move_location

    - action: look
      params:
        pose: params.look_location

    - action: wait
      params:
        duration: 1.0

    - action: segment
      params:
        abort_on_zero: true
      var:
      - segmented_objects

  # Test task for schunk machine manipulation
  approach_schunk_test:
    params:
    - look_location
    steps:
    - action: look
      params:
        pose: params.look_location

    - action: detect_schunk
      var:
      - chuck_approach_pose

    - action: arm
      params:
        poses: joint_poses.above_schunk

    - action: approach_schunk
      params:
        approach_transform: var.chuck_approach_pose
    #- action: schunk_insertion
    #- action: schunk
    #  params:
    #    command: "close"

  # Detect schunk pose task
  detect_schunk_pose_task:
    params:
    - look_location
    vars:
    - chuck_approach_pose
    steps:
    - action: look
      params:
        pose: params.look_location

    - action: detect_schunk
      var:
      - chuck_approach_pose

  # Arm approach schunk task
  arm_approach_schunk_task:
    params:
      - chuck_approach_pose
    steps:
    - action: arm
      params:
        poses: joint_poses.above_schunk

    - action: approach_schunk
      params:
        approach_transform: params.chuck_approach_pose

  # Grasp and detect pose of large gear task
  grasp_large_gear_task:
    steps:
    - task: perceive_pick_loop_task
      params:
        object_key: LARGE_GEAR
        move_location: waypoints.gears
        look_location: gripper_poses.object_look_location

    - action: move_planar
      params:
        linear_amount: -1.0

    - task: clear_neighbourhood_octomap_task

    - action: arm
      params:
        poses: joint_poses.in_hand_localize
        look_at_gripper: true

    - action: verify_grasp
      params:
        abort_on_false: true
      var:
      - grasped

    - action: in_hand_localize
      params:
        disambiguate_direction: true
      var:
      - object_transform

    - action: arm
      params:
        poses: joint_poses.ready

  # Insert large gear in schunk task
  insert_gear_in_schunk:
      steps:
      - task: grasp_large_gear_task

      - action: move
        params:
          location: waypoints.schunk_manipulation

      - task: detect_schunk_pose_task
        params:
          look_location: gripper_poses.at_schunk_corner
        var:
        - approach_pose

      - task: arm_approach_schunk_task
        params:
          chuck_approach_pose: vars.approach_pose

  # Clear only the immediate neighborhood of the octomap
  clear_neighbourhood_octomap_task:
    steps:
    - action: look
      params:
        pose: gripper_poses.neighbourhood_octomap_clear_start

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - action: look
      params:
        pose: gripper_poses.object_look_location

  # Setup for the main tasks. Can get rid of this if need be
  setup:
    steps:
    - action: torso
      params:
        height: 0.4

    - task: reset_arm
      params:
        poses: joint_poses.ready

    - action: detach_objects
      params:
        detach_base: true

    - action: update_beliefs
      params:
        beliefs:
          LARGE_GEAR_ON_TABLE: true
          SMALL_GEAR_ON_TABLE: true
          GEARBOX_TOP_ON_TABLE: true
          GEARBOX_BOTTOM_ON_TABLE: true
          ZERO_BOLTS_IN_KIT: true
          KIT_ON_TABLE: false
          KIT_ON_ROBOT: true

  # Reset the arm in preparation for a new run
  reset_arm:
    params:
    - poses

    steps:
    - action: load_static_octomap

    - action: gripper
      params:
        command: open

    - op: make_boolean
      params:
        var_name: poses
        bool_name: poses_exist
      var:
      - poses_exist

    - action: detach_objects
      params:
        detach_arm: true

    - choice: move_to_poses
      params:
        condition: var.poses_exist
        if_true:
          action: arm
          params:
            poses: params.poses
            look_at_gripper: true

  # A primitive to localize the bin on the robot's base
  localize_bin_robot:
    var:
    - bin_poses

    steps:
    - action: look
      params:
        pose: gripper_poses.kit_on_bin

    - action: wait
      params:
        duration: 1.0

    - action: detect_bins
      params:
        kit_on_base: true
        abort_on_zero: true
      var:
      - bin_poses

  # A primitive to pick an object from the table
  perceive:
    params:
    - object_key
    - look_location

    var:
    - object_idx
    - grasps

    steps:
    - action: look
      params:
        pose: params.look_location

    - action: wait
      params:
        duration: 1.0

    - action: segment
      params:
        abort_on_zero: true
      var:
      - segmented_objects

    - action: recognize_object
      params:
        desired_obj: params.object_key
        segmented_objects: var.segmented_objects
        checks:
          check_location: false
          check_none_class: false
      var:
      - object_idx

    - op: get_index
      params:
        var_name: segmented_objects
        idx: var.object_idx
        idx_name: segmented_obj
      var:
      - segmented_obj

    - choice: retrieve_or_find_choice
      params:
        condition: "str.upper(' params.object_key ').strip() in ['SMALL_GEAR', 'LARGE_GEAR']"
        if_true:
          action: retrieve_grasps
          params:
            segmented_obj: var.segmented_obj
            object_type: params.object_key
          var:
          - grasps
        if_false:
          action: find_grasps
          params:
            segmented_obj: var.segmented_obj
          var:
          - grasps

  # Pick up a kit and verify that it was picked up
  pick_kit_task:
    params:
    - look_location

    var:
    - grasped

    steps:
    - action: detach_objects
      params:
        detach_arm: true

    - action: arm
      params:
        poses: joint_poses.ready

    - action: look
      params:
        pose: params.look_location

    - action: wait
      params:
        duration: 1.0

    - action: detect_bins
      params:
        kit_on_base: false
        abort_on_zero: true
        attach_collision_object: false
      var:
      - bin_poses

    - action: pick_kit

    - action: verify_grasp
      params:
        abort_on_false: false
      var:
      - grasped

  # The loop that tries to pick the kit until it succeeds
  pick_kit_loop_task:
    params:
    - look_location

    steps:
    - op: assign
      params:
        var_name: grasped
        value: false
      var:
      - grasped

    - loop: pick_kit_loop
      params:
        condition: not var.grasped
        loop_body:
          task: pick_kit_task
          params:
            look_location: params.look_location
          var:
          - grasped

  # Given the grasps and the index of the object, pick it up
  pick_task:
    params:
    - object_idx
    - grasps
    - object_key

    var:
    - grasped

    steps:
    - action: pick
      params:
        object_idx: params.object_idx
        grasps: params.grasps
        object_key: params.object_key

    - action: arm
      params:
        poses: joint_poses.verify

    - action: verify_grasp
      params:
        abort_on_false: false
      var:
      - grasped

  # The combined perceive and pick task to loop over
  perceive_pick:
    params:
    - object_key
    - move_location
    - look_location

    var:
    - grasped

    steps:
    - action: detach_objects
      params:
        detach_arm: true

    - action: arm
      params:
        poses: joint_poses.ready

    - op: make_boolean
      params:
        var_name: move_location
        bool_name: move_location_exists
      var:
      - move_location_exists

    - choice: should_move_choice
      params:
        condition: var.move_location_exists
        if_true:
          action: move
          params:
            location: params.move_location

    - task: perceive
      params:
        object_key: params.object_key
        look_location: params.look_location
      var:
      - object_idx
      - grasps

    - task: pick_task
      params:
        object_idx: var.object_idx
        grasps: var.grasps
        object_key: params.object_key
      var:
      - grasped

  # The loop that tries to pick until it succeeds in the perceive and pick
  perceive_pick_loop_task:
    params:
    - object_key
    - move_location
    - look_location

    steps:
    - op: assign
      params:
        var_name: grasped
        value: false
      var:
      - grasped

    - loop: perceive_pick_loop
      params:
        condition: not var.grasped
        loop_body:
          task: perceive_pick
          params:
            object_key: params.object_key
            move_location: params.move_location
            look_location: params.look_location
          var:
          - grasped

  # A task to pick an object and stow it in the kit
  pick_place_in_kit:
    params:
    - object_key
    - move_location
    - look_location
    - disambiguate_direction

    steps:
    - task: perceive_pick_loop_task
      params:
        object_key: params.object_key
        move_location: params.move_location
        look_location: params.look_location

    - action: move_planar
      params:
        linear_amount: -1.0

    - task: clear_neighbourhood_octomap_task

    - action: arm
      params:
        poses: joint_poses.in_hand_localize
        look_at_gripper: true

    - action: verify_grasp
      params:
        abort_on_false: true
      var:
      - grasped

    - action: in_hand_localize
      params:
        disambiguate_direction: params.disambiguate_direction
      var:
      - object_transform

    - action: store_object
      params:
        object_key: params.object_key

    - action: arm
      params:
        poses: joint_poses.ready

  # Pick and place an object in the kit
  pick_place_object_in_kit:
    # object_key: the object we're picking and placing (str)
    # move_location: a location param understood by `move` for where to move the
    #   base
    # look_location: a location param understood by `look` for where to look
    # belief_update: the beliefs to update when successful (dict)
    params:
    - object_key
    - move_location
    - look_location
    - disambiguate_direction
    - belief_update

    steps:
    - task: pick_place_in_kit
      params:
        object_key: params.object_key
        move_location: params.move_location
        look_location: params.look_location
        disambiguate_direction: params.disambiguate_direction

    - action: update_beliefs
      params:
        beliefs: params.belief_update

  # Build the kit
  build_kit:
    steps:
    - task: setup

    - task: localize_bin_robot
      var:
      - bin_poses

    - task: pick_place_object_in_kit
      params:
        object_key: BOLT
        move_location: waypoints.bolts
        look_location: gripper_poses.object_look_location
        disambiguate_direction: false
        belief_update:
          ZERO_BOLTS_IN_KIT: false
          ONE_BOLT_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: BOLT
        move_location: waypoints.bolts
        look_location: gripper_poses.object_look_location
        disambiguate_direction: false
        belief_update:
          ONE_BOLT_IN_KIT: false
          TWO_BOLTS_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: GEARBOX_BOTTOM
        move_location: waypoints.gearboxes
        look_location: gripper_poses.object_look_location
        disambiguate_direction: false
        belief_update:
          GEARBOX_BOTTOM_ON_TABLE: false
          GEARBOX_BOTTOM_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: GEARBOX_TOP
        move_location: waypoints.gearboxes
        look_location: gripper_poses.object_look_location
        disambiguate_direction: false
        belief_update:
          GEARBOX_TOP_ON_TABLE: false
          GEARBOX_TOP_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: LARGE_GEAR
        move_location: waypoints.gears
        look_location: gripper_poses.object_look_location
        disambiguate_direction: true
        belief_update:
          LARGE_GEAR_ON_TABLE: false
          LARGE_GEAR_IN_KIT: true

    - task: pick_place_object_in_kit
      params:
        object_key: SMALL_GEAR
        move_location: waypoints.gears
        look_location: gripper_poses.object_look_location
        disambiguate_direction: false
        belief_update:
          SMALL_GEAR_ON_TABLE: false
          SMALL_GEAR_IN_KIT: true


  ############# RECOVERY #############
  # Swivel head up and down
  clearance_look_tilt:
    steps:
    # Look up and down
    - action: look_pan_tilt
      params:
        tilt_amount: -0.76

    - action: look_pan_tilt
      params:
        tilt_amount: 1.1

    - action: look_pan_tilt
      params:
        tilt_amount: 1.1

    - action: look_pan_tilt
      params:
        tilt_amount: -1.44

  # Look straight ahead, and then swivel head from side to side & up to down
  clearance_look_pan_tilt:
    steps:
    - action: look
      params:
        pose: gripper_poses.at_the_horizon

    - action: look_pan_tilt
      params:
        pan_amount: 0.78

    - action: look_pan_tilt
      params:
        pan_amount: 0.77

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - task: clearance_look_tilt

    - action: look_pan_tilt
      params:
        pan_amount: -0.78

    - task: clearance_look_tilt

    - action: look
      params:
        pose: gripper_poses.at_the_horizon

  # Clear out the octomap
  clear_octomap_task:
    steps:
    - task: clearance_look_pan_tilt


  ############# TESTING #############
  # Conditions test
  conditions_test:
    params:
    - param1
    - param2

    var:
    - var1

    steps:
    - choice: choice1
      params:
        condition: "( params.param1 is None or params.param2 is not None )"
        if_true:
          op: assign
          params:
            var_name: var1
            value: 1
          var:
          - var1

    - choice: choice2
      params:
        condition: params.param1 == 1
        if_true:
          op: assign
          params:
            var_name: var1
            value: 2
          var:
          - var1

  # Loop resumption bug test
  loop_test:
    steps:
    - op: assign
      params:
        var_name: cond
        value: 0
      var:
      - cond

    - loop: loop
      params:
        condition: var.cond <= 5
        loop_body:
          task: loop_body_test
          params:
            cond: var.cond
          var:
          - cond

  loop_body_test:
    params:
    - cond

    var:
    - cond

    steps:
    - op: print_var
      params:
        var_name: cond

    - op: increment
      params:
        var_name: cond
      var:
      - cond

    - op: abort

    - op: print_var
      params:
        var_name: cond
