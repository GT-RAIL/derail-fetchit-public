<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Args to start different capabilities -->
  <arg name="perception" default="true" />
  <arg name="grasping" default="true" />

  <!-- Perception configuration args -->
  <!-- camera topics -->
  <arg name="cloud_topic" value="/head_camera/depth_registered/points" />
  <arg name="camera_color_topic" default="/head_camera/rgb/image_rect_color" />
  <arg name="camera_depth_topic" default="/head_camera/depth/image_rect" />

  <!-- rail_segmentation args -->
  <arg name="segmentation_config" default="$(find rail_semantic_grasping)/config/zones.yaml" />
  <arg name="segmentation_cluster_tolerance" default="0.2" />
  <arg name="segmentation_max_cluster_size" default="30000" />

  <!-- rail_part_affordance_detection args -->
  <arg name="affordance_confidence_threshold" default="0.9" />
  <arg name="affordance_good_range" default="0.005" />
  <arg name="affordance_visualize" default="true" />

  <!-- rail_part_affordance_detection args -->
  <arg name="grasp_cluster_size" default="5" />
  <arg name="grasp_num_samples" default="2000" />

  <!-- data collection args -->
  <arg name="semantic_objects_with_grasps_topic" default="/semantic_grasp_suggestion/semantic_objects_with_grasps" />

  <!-- Perception -->
  <group if="$(arg perception)">
    <!-- RAIL Segmentation -->
    <node name="rail_segmentation" pkg="rail_segmentation" type="rail_segmentation" output="screen">
      <param name="zones_config" value="$(arg segmentation_config)" />
      <param name="point_cloud_topic" value="$(arg cloud_topic)" />
      <param name="cluster_tolerance" value="$(arg segmentation_cluster_tolerance)" />
      <param name="label_markers" value="true" />
      <param name="max_cluster_size" value="$(arg segmentation_max_cluster_size)" />
<!--      <param name="min_cluster_size" value="75" />-->
<!--      <param name="crop_first" value="true" />-->
<!--      <param name="label_markers" value="true" />-->
    </node>

    <!-- RAIL part affordance detection -->
    <include file="$(find rail_part_affordance_detection)/launch/recognition.launch">
      <arg name="camera_color_topic" value="$(arg camera_color_topic)" />
      <arg name="camera_depth_topic" value="$(arg camera_depth_topic)" />
      <arg name="confidence_threshold" default="$(arg affordance_confidence_threshold)" />
      <arg name="good_range" default="$(arg affordance_good_range)" />
      <arg name="visualize" default="$(arg affordance_visualize)" />
    </include>

    <!-- RAIL semantic grasping -->
    <node name="object_semantic_segmentation" pkg="rail_semantic_grasping" type="object_semantic_segmentation_node" output="screen">
      <param name="label_markers" value="true" />
      <param name="min_affordance_pixels" value="100" />
      <param name="cylinder_segmentation_cluster_tolerance" value="0.02" />
      <param name="cylinder_segmentation_min_cluster_size" value="30" />
    </node>
  </group>

  <!-- Grasping -->
  <!-- RAIL grasp calculation -->
  <group if="$(arg grasping)">
    <!-- <include file="$(find rail_grasp_calculation_nodes)/launch/find_grasps.launch">
      <arg name="remove_table" value="false" />
      <arg name="finger_width" value="0.013" />
      <arg name="hand_outer_diameter" value="0.126" />
      <arg name="hand_depth" value="0.024" />
      <arg name="init_bite" value="0.005" />
      <arg name="hand_height" value="0.058" />
      <arg name="cluster_size" value="$(arg grasp_cluster_size)" />
      <arg name="num_samples" value="$(arg grasp_num_samples)" />
    </include> -->

    <!-- FETCH grasp suggestion
    <node pkg="fetch_grasp_suggestion" type="suggester" name="suggester" output="screen">
      <param name="cloud_topic" value="$(arg cloud_topic)" />
    </node> -->

    <!-- RAIL semantic grasping -->
    <node pkg="rail_semantic_grasping" type="semantic_grasp_suggestion" name="semantic_grasp_suggestion" output="screen">
      <param name="num_sampled_grasps" value="200"/>
    </node>

    <!-- RAIL semantic grasping -->
    <node name="data_collection" pkg="rail_semantic_grasping" type="data_collection_node.py" output="screen">
        <param name="semantic_objects_with_grasps_topic" value="$(arg semantic_objects_with_grasps_topic)"/>
    </node>

    <!-- <node pkg="fetch_grasp_suggestion" type="executor" name="executor" output="screen" />-->

    <!--<node pkg="fetch_grasp_suggestion" type="classifier_node.py" name="classifier_node" output="screen">-->
      <!--<param name="file_name" value="$(arg classifier_file)" />-->
      <!--<param name="n_jobs" value="-1" />-->
      <!--<param name="interpret_trees" value="false" />-->
    <!--</node>-->
  </group>

</launch>